# This is a basic workflow to help you get started with Actions

name: Maven Build

# Controls when the action will run. Triggers the workflow on push or pull request
# events but only for the master branch
on: 
  push:
    branches: [ playground ]
#   pull_request:
#     branches: [ master ]

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest 

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
    # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
    - uses: actions/checkout@v2

    - name: Setup Java JDK
      uses: actions/setup-java@v1.4.3
      with:
    # The Java version to make available on the path. Takes a whole or semver Java version, or 1.x syntax (e.g. 1.8 => Java 8.x)
        java-version: 1.8
        # The package type (jre, jdk, jdk+fx)
        java-package: jdk

    - name: Maven Build with env variable  
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  
      run: | 
        echo "<settings><servers><server><id>github</id><username>OWNER</username><password>${GITHUB_TOKEN}</password></server></servers></settings>" > ~/.m2/settings.xml
        mvn clean package -f pom.xml -DskipTests
       
    - name: Just echoes
      run: |   
       echo "**********************"
        echo ${{ github.workspace }}
        echo "************************"
        ls -lart /home/runner/work/SpringPetclinic/SpringPetclinic/
        echo "************************"
        ls -lart /home/runner/work/SpringPetclinic/SpringPetclinic/target
  
    - name: Upload a Build Artifact
      uses: actions/upload-artifact@v2
      with:
        # Artifact name
        name: spring-petclinic-2.2.9.jar
        # A file, directory or wildcard pattern that describes what to upload
        path: ${{ github.workspace }}/target/spring-petclinic-2.2.9.jar
    
#     - name: Azure Login
#       uses: Azure/login@v1
#       with:
#         # Paste output of `az ad sp create-for-rbac` as value of secret variable: AZURE_CREDENTIALS
#         creds: ${{ secrets.AZURE_CREDENTIALS }}
  
    - name: Azure WebApp
      uses: Azure/webapps-deploy@v2
      with:
        # Name of the Azure Web App
        app-name: ghpetclinic
        # Applies to Web App only: Publish profile (*.publishsettings) file contents with Web Deploy secrets
        publish-profile: ${{ secrets.perclinicghpublishprofile }}
#         # Enter an existing Slot other than the Production slot
#         slot-name: # optional, default is production
        # Applies to Web App only: Path to package or folder. *.zip, *.war, *.jar or a folder to deploy
        package: ${{ github.workspace }}/target/spring-petclinic-2.2.9.jar
#         # Applies to Web App Containers only: Specify the fully qualified container image(s) name. For example, 'myregistry.azurecr.io/nginx:latest' or 'python:3.7.2-alpine/'. For multi-container scenario multiple container image names can be provided (multi-line separated)
#         images: 
#         # Applies to Web App Containers only: Path of the Docker-Compose file. Should be a fully qualified path or relative to the default working directory. Required for multi-container scenario
#         configuration-file: # optional
#         # Enter the start up command. For ex. dotnet run or dotnet run
#         startup-command: catalina.sh run
